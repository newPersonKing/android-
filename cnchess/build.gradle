import com.android.build.gradle.api.ApkVariant

if (isDebug.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion 25
    buildToolsVersion '25'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        resourcePrefix "cc_"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        if (isDebug.toBoolean()) {
            buildConfigField 'boolean', 'ISAPP', 'true'
        } else {
            buildConfigField 'boolean', 'ISAPP', 'false'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (isDebug.toBoolean()) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
                java {
                    exclude 'debug/**'
                }
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile project(':EaseUI')
}

if (isDebug.toBoolean()) {
    android.applicationVariants.all { ApkVariant variant ->
        def buildTypeName = variant.buildType.name
        def task = project.tasks.create "jar${buildTypeName.capitalize()}", Jar
        task.archiveName = 'sharedDependency.jar'
        task.dependsOn variant.javaCompiler
        task.outputs.upToDateWhen { false }
        task.from variant.javaCompiler.destinationDir
        task.destinationDir = file(projectDir.absolutePath + "/outputs/jar")
        artifacts.add('archives', task)
    }
}